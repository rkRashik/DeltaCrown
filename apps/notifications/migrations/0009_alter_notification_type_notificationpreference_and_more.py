# Generated by Django 4.2.23 on 2025-10-09 17:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('notifications', '0008_remove_notification_team_alter_notification_type'),
    ]

    operations = [
        migrations.AlterField(
            model_name='notification',
            name='type',
            field=models.CharField(choices=[('reg_confirmed', 'Registration confirmed'), ('bracket_ready', 'Bracket generated'), ('match_scheduled', 'Match scheduled'), ('result_verified', 'Result verified'), ('payment_verified', 'Payment verified'), ('checkin_open', 'Check-in window open'), ('generic', 'Generic'), ('invite_sent', 'Team invite sent'), ('invite_accepted', 'Team invite accepted'), ('roster_changed', 'Team roster changed'), ('tournament_registered', 'Tournament registered'), ('match_result', 'Match result posted'), ('ranking_changed', 'Team ranking changed'), ('sponsor_approved', 'Sponsor approved'), ('promotion_started', 'Promotion started'), ('payout_received', 'Payout received'), ('achievement_earned', 'Achievement earned')], db_index=True, default='generic', max_length=40),
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invite_sent_channels', models.JSONField(blank=True, default=list)),
                ('invite_accepted_channels', models.JSONField(blank=True, default=list)),
                ('roster_changed_channels', models.JSONField(blank=True, default=list)),
                ('tournament_registered_channels', models.JSONField(blank=True, default=list)),
                ('match_result_channels', models.JSONField(blank=True, default=list)),
                ('ranking_changed_channels', models.JSONField(blank=True, default=list)),
                ('sponsor_approved_channels', models.JSONField(blank=True, default=list)),
                ('promotion_started_channels', models.JSONField(blank=True, default=list)),
                ('payout_received_channels', models.JSONField(blank=True, default=list)),
                ('achievement_earned_channels', models.JSONField(blank=True, default=list)),
                ('enable_daily_digest', models.BooleanField(default=True)),
                ('digest_time', models.TimeField(default='08:00:00')),
                ('opt_out_email', models.BooleanField(default=False)),
                ('opt_out_in_app', models.BooleanField(default=False)),
                ('opt_out_discord', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Preference',
                'verbose_name_plural': 'Notification Preferences',
            },
        ),
        migrations.CreateModel(
            name='NotificationDigest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('digest_date', models.DateField()),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('is_sent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('notifications', models.ManyToManyField(related_name='digests', to='notifications.notification')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_digests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-digest_date'],
                'indexes': [models.Index(fields=['user', 'digest_date', 'is_sent'], name='notificatio_user_id_7aa35f_idx')],
                'unique_together': {('user', 'digest_date')},
            },
        ),
    ]
