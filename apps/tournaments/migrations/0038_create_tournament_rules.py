# Generated by Django 4.2.24 on 2025-10-03 13:37

from django.db import migrations, models
import django.db.models.deletion
import django_ckeditor_5.fields


class Migration(migrations.Migration):

    dependencies = [
        ('tournaments', '0037_create_tournament_media'),
    ]

    operations = [
        migrations.CreateModel(
            name='TournamentRules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('general_rules', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='General competition rules and guidelines', null=True, verbose_name='General Rules')),
                ('eligibility_requirements', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='Who can participate in this tournament', null=True, verbose_name='Eligibility Requirements')),
                ('match_rules', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='Specific rules for matches', null=True, verbose_name='Match Rules')),
                ('scoring_system', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='How scoring and points work', null=True, verbose_name='Scoring System')),
                ('penalty_rules', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='Penalties and disqualification rules', null=True, verbose_name='Penalty Rules')),
                ('prize_distribution_rules', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='How prizes are distributed to winners', null=True, verbose_name='Prize Distribution Rules')),
                ('additional_notes', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='Any additional information or notes', null=True, verbose_name='Additional Notes')),
                ('checkin_instructions', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='Instructions for tournament check-in process', null=True, verbose_name='Check-in Instructions')),
                ('require_discord', models.BooleanField(default=False, help_text='Require Discord account for participation')),
                ('require_game_id', models.BooleanField(default=True, help_text='Require game account ID/username')),
                ('require_team_logo', models.BooleanField(default=False, help_text='Require team logo for team tournaments')),
                ('min_age', models.PositiveIntegerField(blank=True, help_text='Minimum age requirement (years)', null=True)),
                ('max_age', models.PositiveIntegerField(blank=True, help_text='Maximum age requirement (years)', null=True)),
                ('region_restriction', models.CharField(blank=True, help_text="Geographic region restrictions (e.g., 'Bangladesh only', 'Asia')", max_length=255, null=True)),
                ('rank_restriction', models.CharField(blank=True, help_text="Game rank restrictions (e.g., 'Gold and above', 'Diamond+')", max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this rules record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this rules record was last updated')),
                ('tournament', models.OneToOneField(help_text='Associated tournament', on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='tournaments.tournament')),
            ],
            options={
                'verbose_name': 'Tournament Rules',
                'verbose_name_plural': 'Tournament Rules',
                'db_table': 'tournament_rules',
                'ordering': ['-updated_at'],
            },
        ),
    ]
