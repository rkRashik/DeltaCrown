# Generated by Django 4.2.24 on 2025-10-03 10:33

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('tournaments', '0034_migrate_capacity_data'),
    ]

    operations = [
        migrations.CreateModel(
            name='TournamentFinance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_fee_bdt', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Entry fee in Bangladeshi Taka (৳). Set to 0 for free tournaments.', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Entry Fee (BDT)')),
                ('prize_pool_bdt', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total prize pool in Bangladeshi Taka (৳)', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Prize Pool (BDT)')),
                ('currency', models.CharField(choices=[('BDT', 'Bangladeshi Taka (৳)'), ('USD', 'US Dollar ($)'), ('EUR', 'Euro (€)')], default='BDT', help_text='Primary currency for this tournament', max_length=3, verbose_name='Currency')),
                ('prize_distribution', models.JSONField(blank=True, default=dict, help_text='Prize breakdown by position (JSON format)', verbose_name='Prize Distribution')),
                ('payment_required', models.BooleanField(default=False, help_text='Whether participants must pay to complete registration', verbose_name='Payment Required')),
                ('payment_deadline_hours', models.PositiveIntegerField(default=48, help_text='Hours after registration to complete payment (1-720)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(720)], verbose_name='Payment Deadline (Hours)')),
                ('refund_policy', models.TextField(blank=True, help_text='Refund policy for this tournament', verbose_name='Refund Policy')),
                ('platform_fee_percent', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Platform fee as percentage of entry fee (0-100%)', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))], verbose_name='Platform Fee (%)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tournament', models.OneToOneField(help_text='The tournament this finance configuration belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='finance', to='tournaments.tournament', verbose_name='Tournament')),
            ],
            options={
                'verbose_name': 'Tournament Finance',
                'verbose_name_plural': 'Tournament Finances',
                'db_table': 'tournaments_finance',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['payment_required'], name='tournaments_payment_3f83ce_idx'), models.Index(fields=['entry_fee_bdt'], name='tournaments_entry_f_a85d3a_idx')],
            },
        ),
    ]
