# Generated by Django 4.2.24 on 2025-09-17 17:51

import django.core.validators
from django.db import migrations, models
import django_ckeditor_5.fields


class Migration(migrations.Migration):

    dependencies = [
        ('tournaments', '0021_alter_tournamentsettings_allow_substitutes_and_more'),
    ]

    operations = [
        migrations.RunSQL(
            """
            DO $$ BEGIN
            IF EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name='tournaments_tournamentsettings' AND column_name='facebook_stream_url') THEN
                ALTER TABLE tournaments_tournamentsettings ALTER COLUMN facebook_stream_url DROP NOT NULL;
            END IF;
            END $$;
            """,
            """
            DO $$ BEGIN
            IF EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name='tournaments_tournamentsettings' AND column_name='facebook_stream_url') THEN
                ALTER TABLE tournaments_tournamentsettings ALTER COLUMN facebook_stream_url SET NOT NULL;
            END IF;
            END $$;
            """,
        ),
        migrations.RunSQL(
            """
            DO $$ BEGIN
            IF EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name='tournaments_tournamentsettings' AND column_name='youtube_stream_url') THEN
                ALTER TABLE tournaments_tournamentsettings ALTER COLUMN youtube_stream_url DROP NOT NULL;
            END IF;
            END $$;
            """,
            """
            DO $$ BEGIN
            IF EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name='tournaments_tournamentsettings' AND column_name='youtube_stream_url') THEN
                ALTER TABLE tournaments_tournamentsettings ALTER COLUMN youtube_stream_url SET NOT NULL;
            END IF;
            END $$;
            """,
        ),
        migrations.RunSQL(
            """
            DO $$ BEGIN
            IF EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name='tournaments_tournamentsettings' AND column_name='discord_link') THEN
                ALTER TABLE tournaments_tournamentsettings ALTER COLUMN discord_link DROP NOT NULL;
            END IF;
            END $$;
            """,
            """
            DO $$ BEGIN
            IF EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name='tournaments_tournamentsettings' AND column_name='discord_link') THEN
                ALTER TABLE tournaments_tournamentsettings ALTER COLUMN discord_link SET NOT NULL;
            END IF;
            END $$;
            """,
        ),
        migrations.AlterField(
            model_name='tournament',
            name='short_description',
            field=django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Short description'),
        ),
        migrations.AlterField(
            model_name='tournamentsettings',
            name='bank_instructions',
            field=models.TextField(blank=True, help_text='Optional bank transfer instructions (bank name, branch, account title & number).', null=True),
        ),
        migrations.AlterField(
            model_name='tournamentsettings',
            name='bkash_receive_number',
            field=models.CharField(blank=True, help_text="Organizer's bKash account number to receive fees.", max_length=32, null=True),
        ),
        migrations.AlterField(
            model_name='tournamentsettings',
            name='bracket_visibility',
            field=models.CharField(blank=True, choices=[('public', 'Public'), ('captains', 'Team Captains Only')], default='public', max_length=16, null=True),
        ),
        migrations.AlterField(
            model_name='tournamentsettings',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='tournamentsettings',
            name='discord_url',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='tournamentsettings',
            name='max_team_size',
            field=models.PositiveSmallIntegerField(blank=True, help_text='Maximum players per team (optional).', null=True, validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='tournamentsettings',
            name='min_team_size',
            field=models.PositiveSmallIntegerField(blank=True, help_text='Minimum players per team (optional).', null=True, validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='tournamentsettings',
            name='nagad_receive_number',
            field=models.CharField(blank=True, help_text="Organizer's Nagad account number to receive fees.", max_length=32, null=True),
        ),
        migrations.AlterField(
            model_name='tournamentsettings',
            name='prize_distribution_text',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='tournamentsettings',
            name='prize_type',
            field=models.CharField(blank=True, choices=[('cash', 'Cash Prize'), ('gift_cards', 'Gift Cards'), ('gear', 'Gaming Gear'), ('sponsored', 'Sponsored Prizes')], help_text='Type of prize being offered.', max_length=16, null=True),
        ),
        migrations.AlterField(
            model_name='tournamentsettings',
            name='rocket_receive_number',
            field=models.CharField(blank=True, help_text="Organizer's Rocket account number to receive fees.", max_length=32, null=True),
        ),
        migrations.AlterField(
            model_name='tournamentsettings',
            name='stream_facebook_url',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='tournamentsettings',
            name='stream_youtube_url',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='tournamentsettings',
            name='tournament_type',
            field=models.CharField(blank=True, choices=[('SE', 'Single Elimination'), ('DE', 'Double Elimination'), ('RR', 'Round Robin'), ('SW', 'Swiss'), ('CU', 'Custom Format')], default='SE', help_text='Bracket format to use if no custom format is supplied.', max_length=2, null=True),
        ),
    ]


