# Generated by Django 4.2.24 on 2025-09-26 07:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('teams', '0037_remove_teamrankingadjustment_adjusted_by_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='RankingCriteria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tournament_participation', models.PositiveIntegerField(default=50, help_text='Points awarded for tournament participation (once per tournament)')),
                ('tournament_winner', models.PositiveIntegerField(default=500, help_text='Points awarded for winning a tournament')),
                ('tournament_runner_up', models.PositiveIntegerField(default=300, help_text='Points awarded for tournament runner-up position')),
                ('tournament_top_4', models.PositiveIntegerField(default=150, help_text='Points awarded for reaching tournament top 4')),
                ('points_per_member', models.PositiveIntegerField(default=10, help_text='Points awarded per active team member')),
                ('points_per_month_age', models.PositiveIntegerField(default=30, help_text='Points awarded per full month since team creation')),
                ('achievement_points', models.PositiveIntegerField(default=100, help_text='Default points for notable achievements')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this criteria set is currently active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Ranking Criteria',
                'verbose_name_plural': 'Ranking Criteria',
                'db_table': 'teams_ranking_criteria',
                'ordering': ['-is_active', '-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='TeamRankingBreakdown',
            fields=[
                ('team', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='ranking_breakdown', serialize=False, to='teams.team')),
                ('tournament_participation_points', models.PositiveIntegerField(default=0)),
                ('tournament_winner_points', models.PositiveIntegerField(default=0)),
                ('tournament_runner_up_points', models.PositiveIntegerField(default=0)),
                ('tournament_top_4_points', models.PositiveIntegerField(default=0)),
                ('member_count_points', models.PositiveIntegerField(default=0)),
                ('team_age_points', models.PositiveIntegerField(default=0)),
                ('achievement_points', models.PositiveIntegerField(default=0)),
                ('manual_adjustment_points', models.IntegerField(default=0)),
                ('calculated_total', models.PositiveIntegerField(default=0, help_text='Sum of all automatic point calculations')),
                ('final_total', models.PositiveIntegerField(default=0, help_text='Final total including manual adjustments')),
                ('last_calculated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Team Ranking Breakdown',
                'verbose_name_plural': 'Team Ranking Breakdowns',
                'db_table': 'teams_ranking_breakdown',
            },
        ),
        migrations.CreateModel(
            name='TeamRankingHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_change', models.IntegerField(help_text='Points added (+) or subtracted (-) in this transaction')),
                ('points_before', models.PositiveIntegerField(help_text="Team's total points before this change")),
                ('points_after', models.PositiveIntegerField(help_text="Team's total points after this change")),
                ('source', models.CharField(choices=[('tournament_participation', 'Tournament Participation'), ('tournament_winner', 'Tournament Winner'), ('tournament_runner_up', 'Tournament Runner-up'), ('tournament_top_4', 'Tournament Top 4'), ('member_count', 'Team Member Count'), ('team_age', 'Team Age Bonus'), ('achievement', 'Achievement Points'), ('manual_adjustment', 'Manual Admin Adjustment'), ('recalculation', 'System Recalculation')], help_text='Source of the point change', max_length=30)),
                ('reason', models.TextField(blank=True, help_text='Detailed explanation for the point change')),
                ('related_object_type', models.CharField(blank=True, max_length=50)),
                ('related_object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('admin_user', models.ForeignKey(blank=True, help_text='Admin user who made manual adjustment', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ranking_history', to='teams.team')),
            ],
            options={
                'verbose_name': 'Team Ranking History',
                'verbose_name_plural': 'Team Ranking History',
                'db_table': 'teams_ranking_history',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['team', '-created_at'], name='teams_ranki_team_id_fecc23_idx'), models.Index(fields=['source', '-created_at'], name='teams_ranki_source_f101e9_idx')],
            },
        ),
    ]
