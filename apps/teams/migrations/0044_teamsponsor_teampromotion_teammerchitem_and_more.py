# Generated by Django 4.2.23 on 2025-10-09 16:42

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('teams', '0043_teamdiscussionpost_teamdiscussioncomment_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='TeamSponsor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sponsor_name', models.CharField(max_length=200)),
                ('sponsor_logo', models.ImageField(blank=True, help_text='Sponsor logo image', null=True, upload_to='sponsors/logos/')),
                ('sponsor_logo_url', models.URLField(blank=True, help_text='External URL for sponsor logo (if not uploaded)', validators=[django.core.validators.URLValidator()])),
                ('sponsor_link', models.URLField(help_text='Link to sponsor website', validators=[django.core.validators.URLValidator()])),
                ('sponsor_tier', models.CharField(choices=[('platinum', 'Platinum'), ('gold', 'Gold'), ('silver', 'Silver'), ('bronze', 'Bronze'), ('partner', 'Partner')], default='bronze', max_length=20)),
                ('contact_name', models.CharField(blank=True, max_length=200)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('pending', 'Pending Approval'), ('active', 'Active'), ('expired', 'Expired'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('is_active', models.BooleanField(default=False)),
                ('deal_value', models.DecimalField(blank=True, decimal_places=2, help_text='Sponsorship deal value', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('click_count', models.PositiveIntegerField(default=0)),
                ('impression_count', models.PositiveIntegerField(default=0)),
                ('notes', models.TextField(blank=True, help_text='Internal notes about the sponsorship')),
                ('benefits', models.TextField(blank=True, help_text='Benefits provided to sponsor')),
                ('display_order', models.PositiveIntegerField(default=0, help_text='Order in which sponsors are displayed (lower = first)')),
                ('show_on_profile', models.BooleanField(default=True, help_text='Display sponsor on team profile')),
                ('show_on_jerseys', models.BooleanField(default=False, help_text='Display sponsor logo on team jerseys')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_sponsors', to=settings.AUTH_USER_MODEL)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sponsors', to='teams.team')),
            ],
            options={
                'verbose_name': 'Team Sponsor',
                'verbose_name_plural': 'Team Sponsors',
                'ordering': ['team', 'display_order', '-start_date'],
            },
        ),
        migrations.CreateModel(
            name='TeamPromotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('promotion_type', models.CharField(choices=[('featured_homepage', 'Featured on Homepage'), ('featured_hub', 'Featured in Team Hub'), ('banner_ad', 'Banner Advertisement'), ('spotlight', 'Team Spotlight'), ('boosted_ranking', 'Boosted in Rankings'), ('social_media', 'Social Media Feature'), ('newsletter', 'Newsletter Feature')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('start_at', models.DateTimeField()),
                ('end_at', models.DateTimeField()),
                ('is_active', models.BooleanField(default=False)),
                ('paid_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('status', models.CharField(choices=[('pending', 'Pending Payment'), ('paid', 'Paid'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('transaction_ref', models.CharField(blank=True, help_text='Payment gateway transaction ID', max_length=200)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('impression_count', models.PositiveIntegerField(default=0)),
                ('click_count', models.PositiveIntegerField(default=0)),
                ('conversion_count', models.PositiveIntegerField(default=0, help_text='Number of conversions (follows, visits, etc.)')),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('admin_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_promotions', to=settings.AUTH_USER_MODEL)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promotions', to='teams.team')),
            ],
            options={
                'verbose_name': 'Team Promotion',
                'verbose_name_plural': 'Team Promotions',
                'ordering': ['-start_at'],
            },
        ),
        migrations.CreateModel(
            name='TeamMerchItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=220)),
                ('sku', models.CharField(help_text='Stock Keeping Unit', max_length=100, unique=True)),
                ('category', models.CharField(choices=[('jersey', 'Jersey'), ('hoodie', 'Hoodie'), ('tshirt', 'T-Shirt'), ('cap', 'Cap'), ('accessory', 'Accessory'), ('collectible', 'Collectible'), ('digital', 'Digital Item'), ('other', 'Other')], default='tshirt', max_length=20)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, help_text='Discounted price if on sale', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('stock', models.PositiveIntegerField(default=0, help_text='Available quantity')),
                ('is_in_stock', models.BooleanField(default=True)),
                ('unlimited_stock', models.BooleanField(default=False, help_text='Digital items or print-on-demand')),
                ('image', models.ImageField(blank=True, null=True, upload_to='merchandise/')),
                ('image_url', models.URLField(blank=True, help_text='External image URL', validators=[django.core.validators.URLValidator()])),
                ('external_link', models.URLField(blank=True, help_text='Link to external store (e.g., Shopify, Teespring)', validators=[django.core.validators.URLValidator()])),
                ('affiliate_link', models.URLField(blank=True, help_text='Affiliate tracking link', validators=[django.core.validators.URLValidator()])),
                ('has_variants', models.BooleanField(default=False, help_text='Has sizes/colors')),
                ('variant_options', models.JSONField(blank=True, default=dict, help_text='{"sizes": ["S", "M", "L"], "colors": ["Black", "White"]}')),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('display_order', models.PositiveIntegerField(default=0)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('click_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='merchandise', to='teams.team')),
            ],
            options={
                'verbose_name': 'Team Merchandise Item',
                'verbose_name_plural': 'Team Merchandise Items',
                'ordering': ['team', 'display_order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SponsorInquiry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=200)),
                ('contact_name', models.CharField(max_length=200)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=50)),
                ('website', models.URLField(blank=True, validators=[django.core.validators.URLValidator()])),
                ('interested_tier', models.CharField(blank=True, choices=[('platinum', 'Platinum'), ('gold', 'Gold'), ('silver', 'Silver'), ('bronze', 'Bronze'), ('partner', 'Partner')], max_length=20)),
                ('budget_range', models.CharField(blank=True, max_length=100)),
                ('message', models.TextField(help_text='Why they want to sponsor')),
                ('industry', models.CharField(blank=True, max_length=100)),
                ('company_size', models.CharField(blank=True, help_text='Number of employees or revenue range', max_length=50)),
                ('previous_sponsorships', models.TextField(blank=True, help_text='Previous esports/gaming sponsorships')),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('contacted', 'Contacted'), ('negotiating', 'Negotiating'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('admin_notes', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_inquiries', to=settings.AUTH_USER_MODEL)),
                ('converted_to_sponsor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='source_inquiry', to='teams.teamsponsor')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sponsor_inquiries', to='teams.team')),
            ],
            options={
                'verbose_name': 'Sponsor Inquiry',
                'verbose_name_plural': 'Sponsor Inquiries',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='teamsponsor',
            index=models.Index(fields=['team', 'status'], name='teams_teams_team_id_4e5525_idx'),
        ),
        migrations.AddIndex(
            model_name='teamsponsor',
            index=models.Index(fields=['status', 'is_active'], name='teams_teams_status_86c270_idx'),
        ),
        migrations.AddIndex(
            model_name='teamsponsor',
            index=models.Index(fields=['start_date', 'end_date'], name='teams_teams_start_d_eb76c9_idx'),
        ),
        migrations.AddIndex(
            model_name='teampromotion',
            index=models.Index(fields=['team', 'status'], name='teams_teamp_team_id_71eb40_idx'),
        ),
        migrations.AddIndex(
            model_name='teampromotion',
            index=models.Index(fields=['status', 'is_active'], name='teams_teamp_status_8d0cfa_idx'),
        ),
        migrations.AddIndex(
            model_name='teampromotion',
            index=models.Index(fields=['start_at', 'end_at'], name='teams_teamp_start_a_1bffa0_idx'),
        ),
        migrations.AddIndex(
            model_name='teampromotion',
            index=models.Index(fields=['promotion_type', 'is_active'], name='teams_teamp_promoti_ed56d3_idx'),
        ),
        migrations.AddIndex(
            model_name='teammerchitem',
            index=models.Index(fields=['team', 'is_active'], name='teams_teamm_team_id_cdb49d_idx'),
        ),
        migrations.AddIndex(
            model_name='teammerchitem',
            index=models.Index(fields=['sku'], name='teams_teamm_sku_f66d44_idx'),
        ),
        migrations.AddIndex(
            model_name='teammerchitem',
            index=models.Index(fields=['is_featured', 'is_active'], name='teams_teamm_is_feat_1ad750_idx'),
        ),
        migrations.AddIndex(
            model_name='sponsorinquiry',
            index=models.Index(fields=['team', 'status'], name='teams_spons_team_id_6b5cd1_idx'),
        ),
        migrations.AddIndex(
            model_name='sponsorinquiry',
            index=models.Index(fields=['status', 'created_at'], name='teams_spons_status_7cceaa_idx'),
        ),
        migrations.AddIndex(
            model_name='sponsorinquiry',
            index=models.Index(fields=['contact_email'], name='teams_spons_contact_96b964_idx'),
        ),
    ]
