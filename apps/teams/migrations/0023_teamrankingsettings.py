# Generated by Django 4.2.24 on 2025-09-23 14:22

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('teams', '0022_add_is_edited_to_team_post'),
    ]

    operations = [
        migrations.CreateModel(
            name='TeamRankingSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tournament_victory_points', models.PositiveIntegerField(default=100, help_text='Points awarded for each tournament victory (1st place)', validators=[django.core.validators.MinValueValidator(1)])),
                ('runner_up_points', models.PositiveIntegerField(default=60, help_text='Points awarded for each runner-up finish (2nd place)', validators=[django.core.validators.MinValueValidator(1)])),
                ('top4_finish_points', models.PositiveIntegerField(default=40, help_text='Points awarded for each top 4 tournament finish', validators=[django.core.validators.MinValueValidator(1)])),
                ('top8_finish_points', models.PositiveIntegerField(default=20, help_text='Points awarded for each top 8 tournament finish', validators=[django.core.validators.MinValueValidator(1)])),
                ('participation_points', models.PositiveIntegerField(default=10, help_text='Points awarded for each tournament participation', validators=[django.core.validators.MinValueValidator(1)])),
                ('general_achievement_points', models.PositiveIntegerField(default=50, help_text='Points awarded per general achievement/trophy', validators=[django.core.validators.MinValueValidator(1)])),
                ('member_points', models.PositiveIntegerField(default=5, help_text='Points awarded per active team member', validators=[django.core.validators.MinValueValidator(1)])),
                ('monthly_age_points', models.PositiveIntegerField(default=2, help_text='Points awarded per month since team creation', validators=[django.core.validators.MinValueValidator(1)])),
                ('verified_team_multiplier', models.DecimalField(decimal_places=2, default=1.1, help_text='Multiplier for verified teams (e.g., 1.10 = 10% bonus)', max_digits=3, validators=[django.core.validators.MinValueValidator(1.0)])),
                ('featured_team_bonus', models.PositiveIntegerField(default=50, help_text='Flat bonus points for featured teams', validators=[django.core.validators.MinValueValidator(0)])),
                ('is_active', models.BooleanField(default=True, help_text='Whether this ranking system is currently active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(blank=True, help_text='Last admin who updated these settings', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Team Ranking Settings',
                'verbose_name_plural': 'Team Ranking Settings',
                'db_table': 'teams_ranking_settings',
            },
        ),
    ]
