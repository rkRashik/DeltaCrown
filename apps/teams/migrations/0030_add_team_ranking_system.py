# Generated by Django 4.2.24 on 2025-09-25 18:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('teams', '0029_fix_missing_points_fields'),
    ]

    operations = [
        migrations.CreateModel(
            name='TeamRankingConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tournament_participation', models.PositiveIntegerField(default=50, help_text='Points awarded for participating in a tournament')),
                ('tournament_winner', models.PositiveIntegerField(default=500, help_text='Points awarded for winning a tournament')),
                ('tournament_runner_up', models.PositiveIntegerField(default=300, help_text='Points awarded for being runner-up in a tournament')),
                ('tournament_top4', models.PositiveIntegerField(default=150, help_text='Points awarded for reaching top 4 in a tournament')),
                ('member_points', models.PositiveIntegerField(default=10, help_text='Points awarded per team member')),
                ('age_points_per_month', models.PositiveIntegerField(default=30, help_text='Points awarded per month of team existence')),
                ('achievement_points', models.PositiveIntegerField(default=100, help_text='Points awarded for other achievements')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Team Ranking Configuration',
                'verbose_name_plural': 'Team Ranking Configurations',
            },
        ),
        migrations.RemoveField(
            model_name='team',
            name='adjust_points',
        ),
        migrations.RemoveField(
            model_name='team',
            name='total_points',
        ),
        migrations.AddField(
            model_name='teamachievement',
            name='awarded_by',
            field=models.ForeignKey(blank=True, help_text='Admin user who awarded this achievement', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='teamachievement',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Whether this achievement contributes to team ranking'),
        ),
        migrations.AddField(
            model_name='teamachievement',
            name='points_awarded',
            field=models.PositiveIntegerField(default=0, help_text='Points awarded for this achievement (calculated automatically based on placement)'),
        ),
        migrations.CreateModel(
            name='TeamRankingPoints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tournament_participation_points', models.PositiveIntegerField(default=0)),
                ('tournament_winner_points', models.PositiveIntegerField(default=0)),
                ('tournament_runner_up_points', models.PositiveIntegerField(default=0)),
                ('tournament_top4_points', models.PositiveIntegerField(default=0)),
                ('member_bonus_points', models.PositiveIntegerField(default=0)),
                ('age_bonus_points', models.PositiveIntegerField(default=0)),
                ('achievement_points', models.PositiveIntegerField(default=0)),
                ('manual_adjustment_points', models.IntegerField(default=0)),
                ('total_points', models.PositiveIntegerField(default=0)),
                ('last_calculated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('team', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ranking_points', to='teams.team')),
            ],
            options={
                'verbose_name': 'Team Ranking Points',
                'verbose_name_plural': 'Team Ranking Points',
                'ordering': ['-total_points', '-last_calculated'],
            },
        ),
        migrations.CreateModel(
            name='TeamPointsAdjustment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField()),
                ('reason', models.CharField(max_length=255)),
                ('adjustment_type', models.CharField(choices=[('manual', 'Manual Admin Adjustment'), ('tournament', 'Tournament Result'), ('achievement', 'Achievement Unlock'), ('correction', 'Error Correction'), ('system', 'System Recalculation')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('admin_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('team_ranking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adjustments', to='teams.teamrankingpoints')),
            ],
            options={
                'verbose_name': 'Team Points Adjustment',
                'verbose_name_plural': 'Team Points Adjustments',
                'ordering': ['-created_at'],
            },
        ),
    ]
